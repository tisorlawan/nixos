set -sg escape-time 0
set -g focus-events on
setw -g aggressive-resize on

# set-option -g default-shell $HOME/.nix-profile/bin/fish
# set-option -g default-shell /bin/zsh

set-option -ga terminal-overrides ",xterm-256color:Tc"
# depending on the terminal
# change to xterm-256color
set -g default-terminal "tmux-256color"

set-window-option -g mode-keys vi
set-option -g history-limit 1111111111

unbind C-b
set-option -g prefix C-a

set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on
set -g renumber-windows on

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
bind Space copy-mode
bind C-Space copy-mode
bind C-l send-keys 'C-l'
bind-key C-a last-window
bind C-j split-window -v "tmux list-window | grep -v active | cut -d' ' -f1-2 |sed -E 's/-.*$//'| fzf --reverse | xargs echo | cut -d: -f1 | xargs tmux select-window -t 2>/dev/null"
bind -n M-s display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_activity},#{session_name}}' |\
    sort -r |\
    sed '/^$/d' |\
    cut -d',' -f2- \|
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"

bind C-t set -g status

unbind n
bind C-n next-window
unbind p
bind C-p previous-window

set-option -g allow-rename off


bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -sel clip -i'



bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'

bind 'l' split-window -h -c '#{pane_current_path}'
bind 'j' split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'
unbind c
bind 'C-c' new-window -c '#{pane_current_path}'


# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

bind > swap-pane -D
bind < swap-pane -U

# Depending on tmux versions;
# remove curly braces and second statement
bind -n C-S-Left { swap-window -t -1; previous-window }
bind -n C-S-Right { swap-window -t +1; next-window }


set -g status-justify left

set -g status-bg '#171720'


setw -g window-status-format "#[fg=colour249]#[bg=#2a2a37] #I #[bg=#2a2a37]#[fg=colour249] #W #{?window_zoomed_flag,[Z],}"
setw -g window-status-current-format "#[bg=#2a2a37]#[fg=colour249,bold] #I #[fg=black]#[bg=colour249] #W #{?window_zoomed_flag,[Z],}"

set -g status-left ''
set -g status-right '#[fg=colour249,bg=#2a2a37,bold] %d/%m #[fg=colour249,bg=#2a2a37,bold] %H:%M:%S '
