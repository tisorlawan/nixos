#!/bin/sh

updateicon() {
	echo "$1" >/tmp/recordingicon
	pkill -RTMIN+1 i3blocks
}

killrecording() {
	recpid="$(cat /tmp/recordingpid)"
	# kill with SIGTERM, allowing finishing touches.
	kill -15 "$recpid"
	rm -f /tmp/recordingpid
	updateicon ""
	pkill -RTMIN+1 i3blocks
	exit
}

video() {
	ffmpeg \
		-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
		-framerate 30 \
		-f x11grab \
		-i :0.0 \
		-c:v libx264 \
		-crf 0 \
		-preset ultrafast \
		"$HOME/video_$(date '+%d-%m-%Y_%H:%M:%S').mkv" &

	echo $! >/tmp/recordingpid
	# updateicon " Video"
}

video_bad() {
	ffmpeg \
		-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
		-framerate 25 \
		-f x11grab \
		-i :0.0 \
		"$HOME/video_$(date '+%d-%m-%Y_%H:%M:%S').mp4" &

	echo $! >/tmp/recordingpid
	# updateicon " Video"
}

screencast() {
	ffmpeg -y \
		-f x11grab \
		-framerate 60 \
		-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
		-i :0.0 \
		-f alsa -i default \
		-r 30 \
		-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
		"$HOME/screencast_$(date '+%d-%m-%Y_%H:%M:%S').mkv" &

	echo $! >/tmp/recordingpid
	# updateicon " Screencast"
}

screencast_bad() {
	ffmpeg -y \
		-f x11grab \
		-framerate 25 \
		-s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
		-i :0.0 \
		-f alsa -i default \
		-r 30 \
		-c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
		"$HOME/screencast_$(date '+%d-%m-%Y_%H:%M:%S').mkv" &

	echo $! >/tmp/recordingpid
	# updateicon " Screencast"
}

webcam() {
	ffmpeg \
		-f v4l2 \
		-i /dev/video0 \
		-video_size 1920x1080 \
		"$HOME/webcam_$(date '+%d-%m-%Y_%H:%M:%S').mkv" &

	echo $! >/tmp/recordingpid
	# updateicon " Webcam"
}

audio() {
	ffmpeg \
		-f alsa -i default \
		-c:a flac \
		"$HOME/audio_$(date '+%d-%m-%Y_%H:%M:%S').mkv" &

	echo $! >/tmp/recordingpid
	# updateicon " Audio"
}

askrecording() {
	choice=$(printf "video\\nvideo_bad\\nscreencast\\nscreencast_bad\\naudio\\nwebcam" |
		rofi -i -dmenu -width 600 -lines 4 -columns 10 -p "Select recording style")
	case "$choice" in
	audio) audio ;;
	screencast) screencast ;;
	screencast_bad) screencast_bad ;;
	video) video ;;
	video_bad) video_bad ;;
	webcam) webcam ;;
	esac
}

asktoend() {
	response=$(printf "Yes\\nNo" |
		rofi -i -dmenu -width 370 -lines 2 -columns 10 -p "Recording still active. End recording?") &&
		[ "$response" = "Yes" ] && killrecording
}

case "$1" in
audio) audio ;;
screencast) screencast ;;
screencast_bad) screencast_bad ;;
video) video ;;
video_bad) video_bad ;;
webcam) webcam ;;
kill) killrecording ;;
*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
